+ priors + tserved + felon +
alcohol + drugs + black +
married + educ + age,
data=recid, dist="gaussian")
library(survival)
res <- survreg(Surv(time = log(durat),
event = uncensored,
type = "right") ~ workprg
+ priors + tserved + felon +
alcohol + drugs + black +
married + educ + age,
data=recid, dist="gaussian")
summary(res)
library(censReg)
res <- survreg(Surv(time = log(durat),
event = uncensored,
type = "right") ~ workprg
+ priors + tserved + felon +
alcohol + drugs + black +
married + educ + age,
data=recid, dist="gaussian")
summary(res)
detach("package:survival", unload=TRUE)
summary(res)
res <- survreg(Surv(time = log(durat),
event = uncensored,
type = "right") ~ workprg
+ priors + tserved + felon +
alcohol + drugs + black +
married + educ + age,
data=recid, dist="gaussian")
library(foreign);library(survival)
recid <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge/recid.dta")
# Define Dummy for UNcensored observations
recid$uncensored <- recid$cens == 0
# Estimate censored regression model:
res <- survreg(Surv(time = log(durat), event = uncensored, type = "right")
~ workprg + priors + tserved + felon + alcohol + drugs +
black + married + educ + age, data=recid, dist="gaussian")
# Output:
summary(res)
library(foreign);library(sampleSelection)
mroz <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge/mroz.dta")
# Estimate Heckman selection model (2 step version)
res<-selection(inlf~educ+exper+I(exper^2)+nwifeinc+age+kidslt6+kidsge6,
log(wage)~educ+exper+I(exper^2), data=mroz, method="2step" )
# Summary of results:
summary(res)
library(readxl)
Rankings <- read_excel("Dropbox/Misc/Bolão/Bolão WC2018/Rankings.xlsx")
View(Rankings)
plot(Player~Dia, data = Rankings)
plot(Player1~Dia, data = Rankings)
dd = data.frame(School_ID = c("A", "B", "C", "A", "B"),
Year = c(1998, 1998, 1999, 2000, 2005),
Value = c(5, 10, 15, 7, 15))
dd
plot(dd$Year[dd$School_ID=="A"], dd$Value[dd$School_ID=="A"], type="b",
xlim=range(dd$Year), ylim=range(dd$Value))
lines(dd$Year[dd$School_ID=="B"], dd$Value[dd$School_ID=="B"], col=2, type="b")
lines(dd$Year[dd$School_ID=="C"], dd$Value[dd$School_ID=="C"], col=3, type="b")
require(ggplot2)
##The values Year, Value, School_ID are
##inherited by the geoms
ggplot(dd, aes(Year, Value,colour=School_ID)) +
geom_line() +
geom_point()
library(readxl)
Rankings <- read_excel("Dropbox/Misc/Bolão/Bolão WC2018/Rankings.xlsx")
View(Rankings)
##The values Year, Value, School_ID are
##inherited by the geoms
ggplot(Rankings, aes(Dia, Ranking, colour=Player)) +
geom_line() +
geom_point()
##The values Year, Value, School_ID are
##inherited by the geoms
ggplot(Rankings, aes(Dia, Ranking, colour=Player)) +
geom_point()
library(ggplot2)
ggplot(Rankings, aes(Dia, Ranking, colour=Player)) +
geom_point() + theme_bw()
ggplot(Rankings, aes(Dia, Ranking, group=Player)) +
geom_point() + theme_bw()
ggplot(Rankings, aes(Dia, Ranking, colour=Player)) +
geom_point() + theme_bw()
ggplot(Rankings, aes(Dia, Ranking, colour=Player)) +
geom_point(aes(shape = Player)) + theme_bw()
ggplot(Rankings, aes(Dia, Ranking, group = Player)) +
geom_point(aes(shape = Player, color = Player)) + theme_bw()
ggplot(Rankings, aes(Dia, Ranking, group = Player)) +
geom_point(aes(shape = Player, color = Player), size = 2) +
theme_bw()
ggplot(Rankings, aes(Dia, Ranking, group = Player)) +
geom_point(aes(shape = Player, color = Player), size = 5) +
theme_bw()
ggplot(Rankings, aes(Dia, Ranking, group = Player)) +
geom_point(aes(shape = Player, color = Player), size = 3) +
theme_bw()
ggplot(Rankings, aes(Dia, Ranking, group = Player)) +
geom_point(aes(shape = Player, color = Player), size = 3) +
scale_shape_manual(values=c(1:6)) + theme_bw()
ggplot(Rankings, aes(Dia, Ranking, group = Player)) +
geom_point(aes(shape = Player, color = Player), size = 3) +
scale_shape_manual(values=c(2:7)) + theme_bw()
ggplot(Rankings, aes(Dia, Ranking, group = Player)) +
geom_point(aes(shape = Player, color = Player), size = 3) +
scale_shape_manual(values=c(3:8)) + theme_bw()
ggplot(Rankings, aes(Dia, Ranking, group = Player)) +
geom_point(aes(shape = Player, color = Player), size = 3) +
scale_shape_manual(values=c(0:5)) + theme_bw()
ggplot(Rankings, aes(Dia, Ranking, group = Player)) +
geom_point(aes(shape = Player, color = Player), size = 3) +
scale_shape_manual(values=c(20:25)) + theme_bw()
ggplot(Rankings, aes(Dia, Ranking, group = Player)) +
geom_point(aes(shape = Player, color = Player), size = 3) +
scale_shape_manual(values=c(15:20)) + theme_bw()
ggplot(Rankings, aes(Dia, Ranking, group = Player)) +
geom_point(aes(shape = Player, color = Player), size = 3)
ggplot(Rankings, aes(Dia, Ranking, group = Player)) + theme_bw() +
geom_point(aes(shape = Player, color = Player), size = 3) #+
ggplot(Rankings, aes(Dia, Ranking, group = Player)) + theme_bw() +
geom_point(aes(shape = Player, color = Player), size = 3) # +
ggplot(Rankings, aes(Dia, Ranking, group = Player)) + theme_bw() +
geom_point(aes(shape = Player, color = Player), size = 3) # +
load("~/Dropbox/Classes/USP/Courses given/Undergrad/EAC0355 - Métodos Quantitativos I (Atuária)/Textbooks/Wooldridge, Jeffrey 2016 6th ed/Data Sets/Data Sets- R/loanapp.RData")
probit.reg <- glm(approve~white, data, family = binomial(link = "probit"))
summary(probit.reg)
View(desc)
View(data)
library(mfx)
probitmfx(approve~white, data = )
probitmfx(approve~white, data)
library(margins)
summary(margins(probit.reg))
probitmfx(approve~white, data, atmean = FALSE)
probitmfx(approve~white, data, atmean = TRUE)
lm.reg <- lm(approve~white, data)
summary(lm.reg)
tapply(data$approve, data$white, summary)
y <- rnorm(100)
x <- rnorm(100)
y <- rnorm(100)
x <- rnorm(100)
plot(y ~ x)
y <- c(y, 50)
y
x <- c(x, 50)
plot(y ~ x)
y <- rnorm(100)
x <- rnorm(100)
plot(y ~ x)
summary(lm(y~x))
y1 <- c(y, 50)
x1 <- c(x, 50)
plot(y1 ~ x1)
summary(lm(y1~x1))
y <- rnorm(100)
x <- rnorm(100)
plot(y ~ x)
summary(lm(y~x))
y1 <- c(y, 500)
x1 <- c(x, 500)
plot(y1 ~ x1)
summary(lm(y1~x1))
y <- rnorm(100)
x <- rnorm(100)
plot(y ~ x)
summary(lm(y~x))
y1 <- c(y, 100)
x1 <- c(x, 100)
plot(y1 ~ x1)
summary(lm(y1~x1))
y <- rnorm(100)
x <- rnorm(100)
plot(y ~ x)
summary(lm(y~x))
y1 <- c(y, 100)
x1 <- c(x, 100)
plot(y1 ~ x1)
summary(lm(y1~x1))
abline(lm(y~x))
y <- rnorm(100)
x <- rnorm(100)
plot(y ~ x)
summary(lm(y~x))
y <- rnorm(100)
x <- rnorm(100)
plot(y ~ x)
abline(lm(y~x))
y1 <- c(y, 100)
x1 <- c(x, 100)
plot(y1 ~ x1)
abline(lm(y1~x1))
summary(lm(y1~x1))
set.seed(1)
y <- rnorm(100)
x <- rnorm(100)
plot(y ~ x)
abline(lm(y~x))
summary(lm(y~x))
y1 <- c(y, 100)
x1 <- c(x, 100)
plot(y1 ~ x1)
abline(lm(y1~x1))
summary(lm(y1~x1))
set.seed(2)
y <- rnorm(100)
x <- rnorm(100)
plot(y ~ x)
abline(lm(y~x))
summary(lm(y~x))
y1 <- c(y, 100)
x1 <- c(x, 100)
plot(y1 ~ x1)
abline(lm(y1~x1))
summary(lm(y1~x1))
set.seed(3)
y <- rnorm(100)
x <- rnorm(100)
plot(y ~ x)
abline(lm(y~x))
summary(lm(y~x))
y1 <- c(y, 100)
x1 <- c(x, 100)
plot(y1 ~ x1)
abline(lm(y1~x1))
summary(lm(y1~x1))
set.seed(4)
y <- rnorm(100)
x <- rnorm(100)
plot(y ~ x)
abline(lm(y~x))
summary(lm(y~x))
y1 <- c(y, 100)
x1 <- c(x, 100)
plot(y1 ~ x1)
abline(lm(y1~x1))
summary(lm(y1~x1))
set.seed(9)
y <- rnorm(100)
x <- rnorm(100)
plot(y ~ x)
abline(lm(y~x))
summary(lm(y~x))
y1 <- c(y, 100)
x1 <- c(x, 100)
plot(y1 ~ x1)
abline(lm(y1~x1))
summary(lm(y1~x1))
set.seed(91)
y <- rnorm(100)
x <- rnorm(100)
plot(y ~ x)
abline(lm(y~x))
summary(lm(y~x))
y1 <- c(y, 100)
x1 <- c(x, 100)
plot(y1 ~ x1)
abline(lm(y1~x1))
summary(lm(y1~x1))
set.seed(911)
y <- rnorm(100)
x <- rnorm(100)
plot(y ~ x)
abline(lm(y~x))
summary(lm(y~x))
y1 <- c(y, 100)
x1 <- c(x, 100)
plot(y1 ~ x1)
abline(lm(y1~x1))
summary(lm(y1~x1))
set.seed(1)
y <- rnorm(100)
x <- rnorm(100)
plot(y ~ x)
abline(lm(y~x))
summary(lm(y~x))
y1 <- c(y, 100)
x1 <- c(x, 100)
plot(y1 ~ x1)
abline(lm(y1~x1))
summary(lm(y1~x1))
set.seed(1)
y <- rnorm(100)
x <- rnorm(100)
plot(y ~ x)
abline(lm(y~x))
summary(lm(y~x))
y1 <- c(y, 50)
x1 <- c(x, 100)
plot(y1 ~ x1)
abline(lm(y1~x1))
summary(lm(y1~x1))
x <- rnorm(25)
b0 <- 10
b1 <- 5
e <- rnorm(25)
set.seed(1)
x <- rnorm(25)
e <- rnorm(25)
b0 <- 10
b1 <- 5
y <- b0 + b1 * x + e
summary(lm(y~x))
um <- rep(1, 25)
cbind(um,x)
X <- matrix(cbind(um,x))
X
X <- matrix(cbind(um,x), ncol = 2)
X
t(X) %*% X
solve(t(X) %*% X)
solve(t(X) %*% X) %*% t(X) %*% y
summary(lm(y~x))
solve(t(X) %*% X) %*% t(X) %*% y
betas <- solve(t(X) %*% X) %*% t(X) %*% y
(betas <- solve(t(X) %*% X) %*% t(X) %*% y)
set.seed(1)
x <- rnorm(25)
e <- rnorm(25)
b0 <- 10
b1 <- 5
y <- b0 + b1 * x + e
summary(lm(y~x))
um <- rep(1, 25)
X <- matrix(cbind(um,x), ncol = 2)
(betas <- solve(t(X) %*% X) %*% t(X) %*% y)
(y - X %*% betas)
t(y - X %*% betas) %*% (y - X %*% betas)
t(y - X %*% betas) %*% (y - X %*% betas)/25
set.seed(1)
x <- rnorm(25)
e <- rnorm(25)
b0 <- 10
b1 <- 5
y <- b0 + b1 * x + e
summary(lm(y~x))
um <- rep(1, 25)
X <- matrix(cbind(um,x), ncol = 2)
(betas <- solve(t(X) %*% X) %*% t(X) %*% y)
t(y - X %*% betas) %*% (y - X %*% betas)/25
sqrt(t(y - X %*% betas) %*% (y - X %*% betas)/25)
sqrt(t(y - X %*% betas) %*% (y - X %*% betas)/24)
sqrt(t(y - X %*% betas) %*% (y - X %*% betas)/23)
set.seed(1)
n <- 25
x <- rnorm(n)
e <- rnorm(n)
b0 <- 10
b1 <- 5
y <- b0 + b1 * x + e
summary(lm(y~x))
um <- rep(1, n)
X <- matrix(cbind(um,x), ncol = 2)
(betas <- solve(t(X) %*% X) %*% t(X) %*% y)
sqrt(t(y - X %*% betas) %*% (y - X %*% betas)/(n-2))
solve(t(X) %*% X)
sigma^2 * solve(t(X) %*% X)
sigma <- sqrt(t(y - X %*% betas) %*% (y - X %*% betas)/(n-2))
sigma^2 * solve(t(X) %*% X)
solve(t(X) %*% X)
solve(t(X) %*% X)
sigma^2
sigma <- as.number(sqrt(t(y - X %*% betas) %*% (y - X %*% betas)/(n-2)))
sigma <- sqrt(t(y - X %*% betas) %*% (y - X %*% betas)/(n-2))
dim(sigma)
names(sigma)
sigma
sigma^2 %*% solve(t(X) %*% X)
sigma <- drop(sqrt(t(y - X %*% betas) %*% (y - X %*% betas)/(n-2)))
sigma
sigma^2 * solve(t(X) %*% X)
set.seed(1)
n <- 25
x <- rnorm(n)
e <- rnorm(n)
b0 <- 10
b1 <- 5
y <- b0 + b1 * x + e
summary(lm(y~x))
um <- rep(1, n)
X <- matrix(cbind(um,x), ncol = 2)
(betas <- solve(t(X) %*% X) %*% t(X) %*% y)
sigma <- drop(sqrt(t(y - X %*% betas) %*% (y - X %*% betas)/(n-2)))
sigma^2 * solve(t(X) %*% X)
sqrt(sigma^2 * solve(t(X) %*% X))
sigma^2 * solve(t(X) %*% X)
sqrt(0.021393308)
sqrt(0.023901939)
library(quantmod)
getSymbols("AAPL")
head(AAPL)
aapl.adj.pr <- AAPL[,6]
head(aapl.adj.pr)
aapl.daily.ret <- dailyReturn(aapl.adj.pr)
head(aapl.daily.ret)
plot(aapl.daily.ret)
plot(aapl.daily.ret, main = "Apple daily returns")
library(quantmod)
getSymbols("AAPL")
head(AAPL)
aapl.adj.pr <- AAPL[,6]
head(aapl.adj.pr)
aapl.daily.ret <- dailyReturn(aapl.adj.pr)
head(aapl.daily.ret)
plot(aapl.daily.ret, main = "Apple daily returns")
plot(aapl.daily.ret)
plot(aapl.daily.ret)
library(quantmod)
getSymbols("AAPL")
head(AAPL)
aapl.adj.pr <- AAPL[,6]
head(aapl.adj.pr)
aapl.daily.ret <- dailyReturn(aapl.adj.pr)
head(aapl.daily.ret)
plot(aapl.daily.ret)
plot(aapl.daily.ret, main = "Apple daily returns")
# Definindo diretorio de trabalho
setwd("~/Dropbox/Classes/Other/FIA/Séries Temporais (Receita Federal)/Data")
# Carregando arquivo
data <- read.table("m-ibm3dx2608.txt", header = TRUE)
head(data)
dim(data)
# Selecionando variaveis
data <- data[,c(2,5)]
head(data)
# Declarando time series
data <- ts(data, frequency = 12, start = c(1926, 1))
# Determinacao da ordem do VAR
library(MTS)
VARorder(data, output = TRUE)
var5 <- VAR(data, p = 5)
# Estimacao VAR(5)
library(vars)
var5 <- VAR(data, p = 5)
summary(var5)
dettach(MTS)
detach(MTS)
detach("MTS")
# Determinacao da ordem do VAR
library(MTS)
VARorder(data, output = TRUE)
detach("MTS")
detach("MTS", unload = TRUE)
# Determinacao da ordem do VAR
library(MTS)
VARorder(data, output = TRUE)
detach("MTS", unload = TRUE)
detach("package:MTS", unload = TRUE)
detach(package:MTS)
# Determinacao da ordem do VAR
library(MTS)
VARorder(data, output = TRUE)
detach(package:MTS)
# Estimacao VAR(5)
library(vars)
var5 <- VAR(data, p = 5)
summary(var5)
# Analise dos residuos
resid <- resid(var5)
head(resid)
mq(resid, lag = 8, adj = 20)
library(MTS)
mq(resid, lag = 8, adj = 20)
mq(resid, lag = 12, adj = 20)
mq(resid, lag = 20, adj = 20)
mq(resid, lag = 30, adj = 20)
mq(resid, lag = 10, adj = 20)
mq(resid, lag = 12, adj = 20)
mq(resid^2, lag = 12, adj = 20)
causality(var5)
head(data)
causality(var5, cause = data$ibmrtn)
causality(var5, cause = data[,1])
data(Canada)
head(Canada)
Canada
causality(var5, cause = ibmrtn)
head(data)
causality(var5, cause = 'sprtn')
causality(var5, cause = "sprtn")
causality(var5, cause = "ibmrtn")
# Causalidade de Granger
causality(var5, cause = "ibmrtn")
causality(var5, cause = "sprtn")
# Definindo diretorio de trabalho
setwd("~/Dropbox/Classes/Other/FIA/Séries Temporais (Receita Federal)/Data")
# Carregando arquivo
data <- read.table("m-ibm3dx2608.txt", header = TRUE)
head(data)
dim(data)
# Selecionando variaveis
data <- data[,c(2,5)]
head(data)
# Declarando time series
data <- ts(data, frequency = 12, start = c(1926, 1))
# Determinacao da ordem do VAR
library(MTS)
VARorder(data, output = TRUE)
detach(package:MTS)
# Estimacao VAR(5)
library(vars)
var5 <- VAR(data, p = 5)
summary(var5)
# Analise dos residuos
resid <- resid(var5)
library(MTS)
mq(resid, lag = 12, adj = 20)
# Causalidade de Granger
causality(var5, cause = "ibmrtn")
causality(var5, cause = "sprtn")
