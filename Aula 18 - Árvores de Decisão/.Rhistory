library(datasets)
str(iris)
head(iris)
pairs(iris[1:4], pch = 21, bg = c("red", "green3", "blue")[unclass(iris$Species)])
library(C50)
install.packages(c50)
install.packages("c50")
install.packages("c50")
data(churn)
churn_model <- C5.0(churnTrain[-20], churnTrain$churn)
churn_pred_train <- predict(churn_model, churnTrain)
churn_pred_test <- predict(churn_model, churnTest)
churn_model10 <- C5.0(churnTrain[-20], churnTrain$churn, trials=10)
churn_pred_train10 <- predict(churn_model10, churnTrain)
churn_pred_test10 <- predict(churn_model10, churnTest)
library(gmodels)
install.packages("RWeka")
library(RWeka)
data(churn)
churn_model <- C5.0(churnTrain[-20], churnTrain$churn)
churn_pred_train <- predict(churn_model, churnTrain)
data(churn)
churn_model <- C5.0(churnTrain[-20], churnTrain$churn)
library(C50)
install.packages("C50")
library(C50)
churn_model <- C5.0(churnTrain[-20], churnTrain$churn)
churn_pred_train <- predict(churn_model, churnTrain)
data(churn)
churn_model <- C5.0(churnTrain[-20], churnTrain$churn)
churn_pred_train <- predict(churn_model, churnTrain)
churn_pred_test <- predict(churn_model, churnTest)
churn_model10 <- C5.0(churnTrain[-20], churnTrain$churn, trials=10)
churn_pred_train10 <- predict(churn_model10, churnTrain)
churn_pred_test10 <- predict(churn_model10, churnTest)
install.packages("RWeka")
library(RWeka)
library(RWeka)
credit <- read.csv("credit.csv")
setwd("D:\\Users\\25052288840\\Downloads\\FIA_data_mining\\Aula 18 - Árvores de Decisão")
credit <- read.csv("credit.csv")
str(credit)
summary(credit)
table(credit$checking_balance)
table(credit$default)
set.seed(12345)
credit_rand <- credit[order(runif(1000)),]
summary(credit_rand$default)
credit_train <- credit_rand[1:900,]
credit_test <- credit_rand[901:1000,]
prop.table(table(credit_train$default))
prop.table(table(credit_test$default))
library(C50)
credit_model <- C5.0(credit_train[-17], credit_train$default)
summary(credit_model)
credit_pred <- predict(credit_model, credit_test)
install.packages("gmodels")
library(gmodels)
CrossTable(credit_test$default, credit_pred, 	prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE, 	dnn = c("actual default", "predict default"))
credit_boost10 <- C5.0(credit_train[-17], credit_train$default, trials=10)
summary(credit_boost10)
credit_boost_pred <- predict(credit_boost10, credit_test)
CrossTable(credit_test$default, credit_boost_pred, prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE, dnn = c("actual default", "predict default"))
str(credit_train$default)
error_cost <- matrix(c(0,1,8,0), nrow=2)
credit_cost <- C5.0(credit_train[-17], credit_train$default, costs = error_cost)
credit_cost_pred <- predict(credit_cost, credit_test)
CrossTable(credit_test$default, credit_cost_pred,  prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE, 	dnn = c("actual default", "predict default"))
library(arules)
install.packages("arules")
library(arules)
groceries <- read.transactions("groceries.csv", sep = ",")
setwd("D:\\Users\\25052288840\\Downloads\\FIA_data_mining\\Aula 18 - Árvores de Decisão")
# install.packages("arules")
library(arules)
groceries <- read.transactions("groceries.csv", sep = ",")
groceries <- read.transactions("groceries.csv", sep = ",")
View(groceries)
groceries
str(groceries)
groceries@itemInfo
inspect(head(groceries))
groceries@data[1:35, 1:35]
summary(groceries)
itemFrequency(groceries)
itemFrequency(groceries[, 1:3])
itemFrequencyPlot(groceries, support = 0.1)
itemFrequencyPlot(groceries, support = 0.05)
itemFrequencyPlot(groceries, topN = 20)
itemFrequencyPlot(groceries, topN = 100)
itemFrequencyPlot(groceries, support = 0.05,
cex.names=0.8, xlim = c(0,0.3), type = "relative", horiz =
TRUE, col = "dark red", las = 1, xlab = paste("Proportion of
Market Baskets Containing Item", "\n(Item Relative
Frequency or Support)"))
image(groceries[1:50])
image(groceries[1:500])
image(sample(groceries, 100))
apriori(groceries)
groceryrules <- apriori(
groceries,
parameter = list(support =.006, confidence = 0.25, minlen = 2)
)
inspect(groceryrules)
inspect(groceryrules[1:3])
library(arulesViz)
install.packages("arulesViz")
# install.packages("arulesViz")
library(arulesViz)
plot(groceryrules, method="two-key plot",
cex=0.8)
library(RColorBrewer)
plot(groceryrules, control=list(jitter=2, col = rev(brewer.pal(9,
"Greens")[4:9])), shading = "lift", cex=0.8)
plot(groceryrules,control=list(
jitter=2,
col=rev(brewer.pal(9, "Greens")[4:9])),
measure = c("support", "lift"), shading = "confidence", cex=0.8)
plot(groceryrules,control=list(
jitter=2,
col=rev(brewer.pal(9, "Greens")[4:9])),
measure = c("support", "lift"), shading = "confidence", cex=0.8,
interactive = TRUE)
